{  
    "title": "TempSens",

    "properties": {
        
        "temperature": {
            "description": "Temperature value of the weather station",
            "type": "number",
            "minimum": -32.5,
            "maximum": 55.2,
            "unit": "om:degree_Celsius",
            "readOnly": true            
        },

        "threshold": {
            "description": "Temperature threshold above which an overheat event should be emitted",
            "type": "number",
            "minimum": 25,
            "maximum": 55.2,
            "unit": "om:degree_Celsius",
            "processes": {                
                "onWriteProc": {
                    "triggers": [
                        {
                            "runtimeEvent": "writeProperty",
                            "interactionAffordance": "threshold"
                        }
                    ],
                    "instructions": [
                        { 
                            "move": {
                                "from": { "pointer": "/p/threshold/i" },
                                "to": { "pointer": "/dmap/threshold" }
                            }
                        }
                    ]
                },                                
                "onReadProc": {
                    "triggers": [
                        {
                            "runtimeEvent": "readProperty",
                            "interactionAffordance": "threshold"
                        }
                    ],
                    "instructions": [
                        { 
                            "move": {
                                "from": { "pointer": "/dmap/threshold" },
                                "to": { "pointer": "/p/threshold/o" }
                            }
                        }
                    ]
                }
            }
        }
    },

    "actions": {

        "shutdown": {
            "processes": {
                "someProc": {
                    "instructions": [
                        { "control": "shutdown" }
                    ]
                }
            }
        },

        "service": {
            "input": {
                "type": "object",
                "properties": {
                    "op": { "type": "string" },
                    "path": { "type": "string" },
                    "content": { "type": "object" }
                }
            },
            "output": {
                "type": "object"
            },
            "processes": {
                "handle": {
                    "instructions": [
                        {
                            "switch": {
                                "switch": "a/service/i/op",
                                "cases": [
                                    {
                                        "case": { "compound": "read" },
                                        "instructions": [
                                            {
                                                "move": {
                                                    "from": {
                                                        "compound": {
                                                            "response": "SUCCESS",
                                                            "requestedPath": { "copy": "a/service/i/path" },
                                                            "resolvedPath": "${a/service/i/path}",
                                                            "val": { "copy": "${a/service/i/path}" }
                                                        }
                                                    }, 
                                                    "to": { "pointer": "/a/service/o" }
                                                }
                                            }
                                        ]
                                    },
                                    {
                                        "case": { "compound": "write" },
                                        "instructions": [
                                            {
                                                "move": {
                                                    "from": { "compound": { "copy": "/a/service/i/content/val" } },
                                                    "to": { "pointer": "${/a/service/i/path}" }
                                                }
                                            },
                                            {
                                                "move": {
                                                    "from": {
                                                        "compound": {
                                                            "response": "SUCCESS",
                                                            "requestedPath": { "copy": "a/service/i/path" },
                                                            "resolvedPath": "${a/service/i/path}",
                                                            "newVal": { "copy": "${a/service/i/path}" }
                                                        }
                                                    },
                                                    "to": { "pointer": "/a/service/o" }
                                                }
                                            }
                                        ]
                                    }
                                ],
                                "default": [
                                    {
                                        "move": {
                                            "from": { "compound": { "response": "Invalid op: ${a/service/i/op}" } },
                                            "to": { "pointer": "/a/service/o" }
                                        }
                                    }
                                ]
                            }
                        }
                    ]
                }
            }
        }
    },

    "events": {

        "overheat": {
            "data": {
                "type": "object",
                "properties": {
                    "timestamp": { "type": "string" },
                    "temperature": { "type": "number" },
                    "threshold": { "type": "number" }
                }
            },
            "processes": {
                "someProc": {
                    "instructions": [
                        { "log": "Overheat event emitted at ${dt/iso}" }
                    ]
                }
            }
        }
    },
    
    "sensors": {

        "temperature": {
            "dataMap": {
                "val": {
                    "type": "number",
                    "minimum": -32.5,
                    "maximum": 55.2
                }
            },
            "processes": {
                "sim": {
                    "triggers": [ { "interval": { "expr": "${/dmap/sampleInterval}" } } ],
                    "instructions": [
                        {
                            "move": {
                                "from": { "expression": { "expr": "random(20,55)" } },
                                "to": { "pointer": "/sen/temperature/dmap/val" }
                            }
                        },
                        {
                            "move": {
                                "from": { "pointer": "/sen/temperature/dmap/val" },
                                "to": { "pointer": "/p/temperature/o" }
                            }
                        },
                        {
                            "ifelse": {
                                "if": {
                                    "condition": { "expr": "${/dmap/debug}" },
                                    "instructions": [
                                        { "log": "${/dt/iso} Current temperature: ${/sen/temperature/dmap/val}" }
                                    ]
                                }
                            }
                        },
                        {
                            "ifelse": {
                                "if": {
                                    "condition": { "expr": "${/sen/temperature/dmap/val} > ${/dmap/threshold}" },
                                    "instructions": [
                                        {
                                            "emitEvent": {
                                                "name": "overheat",
                                                "data": {
                                                    "compound": {
                                                        "timestamp": "${dt/iso}",
                                                        "temperature": { "copy": "/sen/temperature/dmap/val" },
                                                        "threshold": { "copy": "/dmap/threshold" }
                                                    }
                                                }
                                            }
                                        }
                                    ]
                                }
                            }
                        }                       
                    ]
                }
            }            
        }
    },

    "dataMap": {

        "debug": {
            "type": "boolean",
            "default": false
        },

        "threshold": {
            "type": "number",
            "minimum": -32.5,
            "maximum": 55.2
        },

        "sampleInterval": {
            "type": "number",
            "default": 1000,
            "minimum": 100
        }
    },

    "processes": {

        "initProc": {
            "triggers": [ { "runtimeEvent": "startup" } ],
            "instructions": [
                {
                    "move": {
                        "from": { "compound": 45 },
                        "to": { "pointer": "/dmap/threshold" }
                    }
                },
                { "log": "Initialized threshold to: ${/dmap/threshold}" }
            ]
        },

        "shudownProc": {
            "triggers": [ { "runtimeEvent": "shutdown" } ],
            "instructions": [
                { "log": "Shutting down" }
            ]
        }
    }
}